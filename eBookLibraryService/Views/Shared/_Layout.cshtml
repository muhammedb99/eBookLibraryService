@using Microsoft.AspNetCore.Identity;
@inject SignInManager<Users> signInManager;
@inject UserManager<Users> userManager;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - eBookLibraryService</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">

    <!-- Bootstrap and Custom Styles -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/style1.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">eBookLibraryService</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        @if (signInManager.IsSignedIn(User))
                        {
                            var user = await userManager.GetUserAsync(User); // Define the `user` variable here
                            if (user != null && await userManager.IsInRoleAsync(user, "Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Dashboard" asp-action="Index">Admin Dashboard</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Profile">My Account</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Books" asp-action="BorrowedBooks">My Borrowed Books</a>
                            </li>
                        }
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        <!-- Cart -->
                        <li class="nav-item">
                            <form class="d-flex" action="@Url.Action("Index", "Cart")" method="get">
                                <button class="btn btn-outline-light" type="submit">
                                    <i class="fas fa-shopping-cart"></i>
                                    <span class="badge bg-warning">@ViewBag.CartItemCount</span>
                                </button>
                            </form>
                        </li>
                        <!-- User Authentication -->
                        @if (signInManager.IsSignedIn(User))
                        {
                            var user = await userManager.GetUserAsync(User); // Fetch the user object
                            if (user != null)
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        @user.FullName
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                        <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">My Profile</a></li>
                                        <li>
                                            <form asp-controller="Account" asp-action="Logout" method="post" class="dropdown-item">
                                                <button type="submit" class="btn btn-link text-start w-100">Logout</button>
                                            </form>
                                        </li>
                                    </ul>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="container my-4">
        @RenderBody()
    </main>

    <footer class="bg-dark text-light py-3">
        <div class="container text-center">
            &copy; @DateTime.Now.Year eBookLibraryService. All Rights Reserved.
            <div class="mt-2">
                <a href="@Url.Action("ContactUs", "Home")" class="text-light">Contact Us</a> |
                <a href="@Url.Action("AboutUs", "Home")" class="text-light">About Us</a> |
                <a href="@Url.Action("Terms", "Home")" class="text-light">Terms of Service</a>
            </div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
